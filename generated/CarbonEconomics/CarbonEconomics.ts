// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ControllerSet extends ethereum.Event {
  get params(): ControllerSet__Params {
    return new ControllerSet__Params(this);
  }
}

export class ControllerSet__Params {
  _event: ControllerSet;

  constructor(event: ControllerSet) {
    this._event = event;
  }

  get controller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get controllerId(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get initiator(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PaymentTokenSet extends ethereum.Event {
  get params(): PaymentTokenSet__Params {
    return new PaymentTokenSet__Params(this);
  }
}

export class PaymentTokenSet__Params {
  _event: PaymentTokenSet;

  constructor(event: PaymentTokenSet) {
    this._event = event;
  }

  get paymentToken(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ResellerPercentRangeSet extends ethereum.Event {
  get params(): ResellerPercentRangeSet__Params {
    return new ResellerPercentRangeSet__Params(this);
  }
}

export class ResellerPercentRangeSet__Params {
  _event: ResellerPercentRangeSet;

  constructor(event: ResellerPercentRangeSet) {
    this._event = event;
  }

  get min(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get max(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ResellerPercentSet extends ethereum.Event {
  get params(): ResellerPercentSet__Params {
    return new ResellerPercentSet__Params(this);
  }
}

export class ResellerPercentSet__Params {
  _event: ResellerPercentSet;

  constructor(event: ResellerPercentSet) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get resellerPercent(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ReservePercentSet extends ethereum.Event {
  get params(): ReservePercentSet__Params {
    return new ReservePercentSet__Params(this);
  }
}

export class ReservePercentSet__Params {
  _event: ReservePercentSet;

  constructor(event: ReservePercentSet) {
    this._event = event;
  }

  get reservePercent(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class StartingPriceRangeSet extends ethereum.Event {
  get params(): StartingPriceRangeSet__Params {
    return new StartingPriceRangeSet__Params(this);
  }
}

export class StartingPriceRangeSet__Params {
  _event: StartingPriceRangeSet;

  constructor(event: StartingPriceRangeSet) {
    this._event = event;
  }

  get min(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get max(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class StartingPriceSet extends ethereum.Event {
  get params(): StartingPriceSet__Params {
    return new StartingPriceSet__Params(this);
  }
}

export class StartingPriceSet__Params {
  _event: StartingPriceSet;

  constructor(event: StartingPriceSet) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get startingPrice(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class WithdrawStuckERC1155 extends ethereum.Event {
  get params(): WithdrawStuckERC1155__Params {
    return new WithdrawStuckERC1155__Params(this);
  }
}

export class WithdrawStuckERC1155__Params {
  _event: WithdrawStuckERC1155;

  constructor(event: WithdrawStuckERC1155) {
    this._event = event;
  }

  get receiver(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class WithdrawStuckERC20 extends ethereum.Event {
  get params(): WithdrawStuckERC20__Params {
    return new WithdrawStuckERC20__Params(this);
  }
}

export class WithdrawStuckERC20__Params {
  _event: WithdrawStuckERC20;

  constructor(event: WithdrawStuckERC20) {
    this._event = event;
  }

  get receiver(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class WithdrawStuckERC721 extends ethereum.Event {
  get params(): WithdrawStuckERC721__Params {
    return new WithdrawStuckERC721__Params(this);
  }
}

export class WithdrawStuckERC721__Params {
  _event: WithdrawStuckERC721;

  constructor(event: WithdrawStuckERC721) {
    this._event = event;
  }

  get receiver(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class WithdrawStuckEther extends ethereum.Event {
  get params(): WithdrawStuckEther__Params {
    return new WithdrawStuckEther__Params(this);
  }
}

export class WithdrawStuckEther__Params {
  _event: WithdrawStuckEther;

  constructor(event: WithdrawStuckEther) {
    this._event = event;
  }

  get receiver(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class CarbonEconomics__getCurrentPriceResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }
}

export class CarbonEconomics__getResellerPercentRangeResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class CarbonEconomics__getStartingPriceRangeResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class CarbonEconomics extends ethereum.SmartContract {
  static bind(address: Address): CarbonEconomics {
    return new CarbonEconomics("CarbonEconomics", address);
  }

  getCurrentPrice(
    creator: Address,
    buyer: Address,
    reseller: Address,
    tokenId: BigInt
  ): CarbonEconomics__getCurrentPriceResult {
    let result = super.call(
      "getCurrentPrice",
      "getCurrentPrice(address,address,address,uint256):(uint256,uint256,uint256,uint256)",
      [
        ethereum.Value.fromAddress(creator),
        ethereum.Value.fromAddress(buyer),
        ethereum.Value.fromAddress(reseller),
        ethereum.Value.fromUnsignedBigInt(tokenId)
      ]
    );

    return new CarbonEconomics__getCurrentPriceResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt()
    );
  }

  try_getCurrentPrice(
    creator: Address,
    buyer: Address,
    reseller: Address,
    tokenId: BigInt
  ): ethereum.CallResult<CarbonEconomics__getCurrentPriceResult> {
    let result = super.tryCall(
      "getCurrentPrice",
      "getCurrentPrice(address,address,address,uint256):(uint256,uint256,uint256,uint256)",
      [
        ethereum.Value.fromAddress(creator),
        ethereum.Value.fromAddress(buyer),
        ethereum.Value.fromAddress(reseller),
        ethereum.Value.fromUnsignedBigInt(tokenId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new CarbonEconomics__getCurrentPriceResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt()
      )
    );
  }

  getPaymentToken(): Address {
    let result = super.call(
      "getPaymentToken",
      "getPaymentToken():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getPaymentToken(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getPaymentToken",
      "getPaymentToken():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getResellerPercent(tokenId: BigInt): BigInt {
    let result = super.call(
      "getResellerPercent",
      "getResellerPercent(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );

    return result[0].toBigInt();
  }

  try_getResellerPercent(tokenId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getResellerPercent",
      "getResellerPercent(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getResellerPercentRange(): CarbonEconomics__getResellerPercentRangeResult {
    let result = super.call(
      "getResellerPercentRange",
      "getResellerPercentRange():(uint256,uint256)",
      []
    );

    return new CarbonEconomics__getResellerPercentRangeResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_getResellerPercentRange(): ethereum.CallResult<
    CarbonEconomics__getResellerPercentRangeResult
  > {
    let result = super.tryCall(
      "getResellerPercentRange",
      "getResellerPercentRange():(uint256,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new CarbonEconomics__getResellerPercentRangeResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  getStartingPrice(tokenId: BigInt): BigInt {
    let result = super.call(
      "getStartingPrice",
      "getStartingPrice(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );

    return result[0].toBigInt();
  }

  try_getStartingPrice(tokenId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getStartingPrice",
      "getStartingPrice(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getStartingPriceRange(): CarbonEconomics__getStartingPriceRangeResult {
    let result = super.call(
      "getStartingPriceRange",
      "getStartingPriceRange():(uint256,uint256)",
      []
    );

    return new CarbonEconomics__getStartingPriceRangeResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_getStartingPriceRange(): ethereum.CallResult<
    CarbonEconomics__getStartingPriceRangeResult
  > {
    let result = super.tryCall(
      "getStartingPriceRange",
      "getStartingPriceRange():(uint256,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new CarbonEconomics__getStartingPriceRangeResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get initiator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetControllerCall extends ethereum.Call {
  get inputs(): SetControllerCall__Inputs {
    return new SetControllerCall__Inputs(this);
  }

  get outputs(): SetControllerCall__Outputs {
    return new SetControllerCall__Outputs(this);
  }
}

export class SetControllerCall__Inputs {
  _call: SetControllerCall;

  constructor(call: SetControllerCall) {
    this._call = call;
  }

  get controller(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get controllerId(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class SetControllerCall__Outputs {
  _call: SetControllerCall;

  constructor(call: SetControllerCall) {
    this._call = call;
  }
}

export class SetCurrentPaymentTokenCall extends ethereum.Call {
  get inputs(): SetCurrentPaymentTokenCall__Inputs {
    return new SetCurrentPaymentTokenCall__Inputs(this);
  }

  get outputs(): SetCurrentPaymentTokenCall__Outputs {
    return new SetCurrentPaymentTokenCall__Outputs(this);
  }
}

export class SetCurrentPaymentTokenCall__Inputs {
  _call: SetCurrentPaymentTokenCall;

  constructor(call: SetCurrentPaymentTokenCall) {
    this._call = call;
  }

  get paymentToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetCurrentPaymentTokenCall__Outputs {
  _call: SetCurrentPaymentTokenCall;

  constructor(call: SetCurrentPaymentTokenCall) {
    this._call = call;
  }
}

export class SetInitialConfigCall extends ethereum.Call {
  get inputs(): SetInitialConfigCall__Inputs {
    return new SetInitialConfigCall__Inputs(this);
  }

  get outputs(): SetInitialConfigCall__Outputs {
    return new SetInitialConfigCall__Outputs(this);
  }
}

export class SetInitialConfigCall__Inputs {
  _call: SetInitialConfigCall;

  constructor(call: SetInitialConfigCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get startingPrice(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get resellerPercent(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SetInitialConfigCall__Outputs {
  _call: SetInitialConfigCall;

  constructor(call: SetInitialConfigCall) {
    this._call = call;
  }
}

export class SetResellerPercentCall extends ethereum.Call {
  get inputs(): SetResellerPercentCall__Inputs {
    return new SetResellerPercentCall__Inputs(this);
  }

  get outputs(): SetResellerPercentCall__Outputs {
    return new SetResellerPercentCall__Outputs(this);
  }
}

export class SetResellerPercentCall__Inputs {
  _call: SetResellerPercentCall;

  constructor(call: SetResellerPercentCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get resellerPercent(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetResellerPercentCall__Outputs {
  _call: SetResellerPercentCall;

  constructor(call: SetResellerPercentCall) {
    this._call = call;
  }
}

export class SetResellerPercentRangeCall extends ethereum.Call {
  get inputs(): SetResellerPercentRangeCall__Inputs {
    return new SetResellerPercentRangeCall__Inputs(this);
  }

  get outputs(): SetResellerPercentRangeCall__Outputs {
    return new SetResellerPercentRangeCall__Outputs(this);
  }
}

export class SetResellerPercentRangeCall__Inputs {
  _call: SetResellerPercentRangeCall;

  constructor(call: SetResellerPercentRangeCall) {
    this._call = call;
  }

  get min(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get max(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetResellerPercentRangeCall__Outputs {
  _call: SetResellerPercentRangeCall;

  constructor(call: SetResellerPercentRangeCall) {
    this._call = call;
  }
}

export class SetReservePercentCall extends ethereum.Call {
  get inputs(): SetReservePercentCall__Inputs {
    return new SetReservePercentCall__Inputs(this);
  }

  get outputs(): SetReservePercentCall__Outputs {
    return new SetReservePercentCall__Outputs(this);
  }
}

export class SetReservePercentCall__Inputs {
  _call: SetReservePercentCall;

  constructor(call: SetReservePercentCall) {
    this._call = call;
  }

  get pct(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetReservePercentCall__Outputs {
  _call: SetReservePercentCall;

  constructor(call: SetReservePercentCall) {
    this._call = call;
  }
}

export class SetStartingPriceCall extends ethereum.Call {
  get inputs(): SetStartingPriceCall__Inputs {
    return new SetStartingPriceCall__Inputs(this);
  }

  get outputs(): SetStartingPriceCall__Outputs {
    return new SetStartingPriceCall__Outputs(this);
  }
}

export class SetStartingPriceCall__Inputs {
  _call: SetStartingPriceCall;

  constructor(call: SetStartingPriceCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get startingPrice(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetStartingPriceCall__Outputs {
  _call: SetStartingPriceCall;

  constructor(call: SetStartingPriceCall) {
    this._call = call;
  }
}

export class SetStartingPriceRangeCall extends ethereum.Call {
  get inputs(): SetStartingPriceRangeCall__Inputs {
    return new SetStartingPriceRangeCall__Inputs(this);
  }

  get outputs(): SetStartingPriceRangeCall__Outputs {
    return new SetStartingPriceRangeCall__Outputs(this);
  }
}

export class SetStartingPriceRangeCall__Inputs {
  _call: SetStartingPriceRangeCall;

  constructor(call: SetStartingPriceRangeCall) {
    this._call = call;
  }

  get min(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get max(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetStartingPriceRangeCall__Outputs {
  _call: SetStartingPriceRangeCall;

  constructor(call: SetStartingPriceRangeCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class WithdrawERC1155Call extends ethereum.Call {
  get inputs(): WithdrawERC1155Call__Inputs {
    return new WithdrawERC1155Call__Inputs(this);
  }

  get outputs(): WithdrawERC1155Call__Outputs {
    return new WithdrawERC1155Call__Outputs(this);
  }
}

export class WithdrawERC1155Call__Inputs {
  _call: WithdrawERC1155Call;

  constructor(call: WithdrawERC1155Call) {
    this._call = call;
  }

  get receiver(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class WithdrawERC1155Call__Outputs {
  _call: WithdrawERC1155Call;

  constructor(call: WithdrawERC1155Call) {
    this._call = call;
  }
}

export class WithdrawERC721Call extends ethereum.Call {
  get inputs(): WithdrawERC721Call__Inputs {
    return new WithdrawERC721Call__Inputs(this);
  }

  get outputs(): WithdrawERC721Call__Outputs {
    return new WithdrawERC721Call__Outputs(this);
  }
}

export class WithdrawERC721Call__Inputs {
  _call: WithdrawERC721Call;

  constructor(call: WithdrawERC721Call) {
    this._call = call;
  }

  get receiver(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class WithdrawERC721Call__Outputs {
  _call: WithdrawERC721Call;

  constructor(call: WithdrawERC721Call) {
    this._call = call;
  }
}

export class WithdrawErc20Call extends ethereum.Call {
  get inputs(): WithdrawErc20Call__Inputs {
    return new WithdrawErc20Call__Inputs(this);
  }

  get outputs(): WithdrawErc20Call__Outputs {
    return new WithdrawErc20Call__Outputs(this);
  }
}

export class WithdrawErc20Call__Inputs {
  _call: WithdrawErc20Call;

  constructor(call: WithdrawErc20Call) {
    this._call = call;
  }

  get receiver(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class WithdrawErc20Call__Outputs {
  _call: WithdrawErc20Call;

  constructor(call: WithdrawErc20Call) {
    this._call = call;
  }
}

export class WithdrawEtherCall extends ethereum.Call {
  get inputs(): WithdrawEtherCall__Inputs {
    return new WithdrawEtherCall__Inputs(this);
  }

  get outputs(): WithdrawEtherCall__Outputs {
    return new WithdrawEtherCall__Outputs(this);
  }
}

export class WithdrawEtherCall__Inputs {
  _call: WithdrawEtherCall;

  constructor(call: WithdrawEtherCall) {
    this._call = call;
  }

  get receiver(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class WithdrawEtherCall__Outputs {
  _call: WithdrawEtherCall;

  constructor(call: WithdrawEtherCall) {
    this._call = call;
  }
}
